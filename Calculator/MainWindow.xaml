<!-- Remember; the window element is default, I did NOT type this out.
    I never adjusted the size/width of any element in this calculator using the design view
    It was ALL done using XAML code.-->
    <Window x:Class="Calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calculator"
        mc:Ignorable="d"
            
        Title="Calculator" Height="800" Width="600">
    <Grid>
       <!-- we are building our grid below. We have 3 columns and 7 rows 
        we can design it however we want!
        
        Remember: we start counting at zero so column 1 is actually Grid.Column="0".
        Same concept is applied to rows.-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            
            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <!-- First Row 
        
         The first row simply contains a textbox to display what you want to calculate.
        
        Note that I am using Grid.ColumnSpan = 3 that is me telling the program
        using XAML to make this element take up three columns (e.g., the entire row).-->

        <TextBox Name="displayBox" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="WhiteSmoke" Foreground="Blue" FontWeight="Bold" FontSize="60" MouseDoubleClick="displayBox_MouseDoubleClick">


        </TextBox>



        <!-- Second Row, note: row order starts from zero
            The second row is a good example of me using nested layouts.
            Nested is a fancy way of saying a layout within a layout.
            I am using a stackpanel in a horizontal orientation within a grid.
            This is a BAD way of spliting one column/row combo in the grid into two.
            Why is it a bad way? Click the maximize button to find out.
        
        -->
        
        <!-- the first stackpanel below contains two buttons 1 is the addition button and the other is the subtraction button.
        Notice how I set the width for these buttons unlike the buttons that are directly on the grid (see the numeric buttons below).
        Why is the width set to 99? I am glad you asked! 
        The width of the entire program window is set to 600 I have three stack panels two buttons each. That means the width of the button within a stackpanel should be 100
        I put in 99 to give it a little bit of margin (you can't see it it is that small).
        -->
        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1">
            <Button Name="add" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Width="99" Click="add_Click">+</Button>
            <Button Name="subtract" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Width="99" Click="subtract_Click">-</Button>
        </StackPanel>
        <!-- another stackpanel within the grid, this one contains the multiply and divide button.-->
        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
            <Button Name="multiply" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Width="99" Click="multiply_Click">x</Button>
            <Button Name="divide"  Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Width="99" Click="divide_Click">/</Button>
        </StackPanel>
    <!-- Yet another stack panel, this one contains square/exponent buttons.-->
        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1">
            <Button Name="square" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="45" Width="99" Click="square_Click">x^2</Button>
            <Button Name="exponent" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="45" Width="99" Click="exponent_Click">x^y</Button>
        </StackPanel>



        <!-- Third Row-->
        
        <!-- the third row is the start of the numeric buttons, notice how these are directly on the grid
        (not within the stackpanel that is on the grid like the buttons above).-->
        <Button Name="one" Grid.Column="0" Grid.Row="2" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="one_Click">1</Button>
        <Button Name="two" Grid.Column="1" Grid.Row="2" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="two_Click">2</Button>
        <Button Name="three" Grid.Column="2" Grid.Row="2" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="three_Click">3</Button>
        <!-- Fourth Row -->
        <Button Name ="four" Grid.Column="0" Grid.Row="3" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="four_Click">4</Button>
        <Button Name="five" Grid.Column="1" Grid.Row="3" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="five_Click">5</Button>
        <Button Name="six" Grid.Column="2" Grid.Row="3" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="six_Click">6</Button>
       <!-- Fifth Row -->
        <Button Name="seven" Grid.Column="0" Grid.Row="4" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="seven_Click">7</Button>
        <Button Name="eight" Grid.Column="1" Grid.Row="4" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="eight_Click">8</Button>
        <Button Name="nine" Grid.Column="2" Grid.Row="4" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="nine_Click">9</Button>
        <!-- Sixth Row -->
        <!-- The sixth row is a little bit special, I wanted a large equals button, so I made the equals button span two columns as shown below.-->
        <Button Name="zero" Grid.Column="0" Grid.Row="5" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="zero_Click">0</Button>
        <Button Name="equals" Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="2" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="equals_Click">=</Button>

        <!-- Added row for the fraction button just to try out an object!-->

        <Button Name="fraction" Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="3" Background="Beige" Foreground="Blue" FontWeight="Bold" FontSize="60" Click="fraction_click">FRAC</Button>


        <!--   -->


    </Grid>
</Window>
